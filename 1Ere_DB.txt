CREATE TABLE Utilisateur (
    id INT AUTO_INCREMENT PRIMARY KEY,
    nom VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE NOT NULL,
    password VARCHAR(255) NOT NULL,
    role ENUM('Admin', 'Medecin', 'Secretaire') NOT NULL
);

CREATE TABLE Medecin (
    id INT AUTO_INCREMENT PRIMARY KEY,
    utilisateur_id INT,
    nom VARCHAR(100) NOT NULL,
    prenom VARCHAR(100) NOT NULL,
    specialite VARCHAR(100),
    telephone VARCHAR(50),
    FOREIGN KEY (utilisateur_id) REFERENCES Utilisateur(id) ON DELETE CASCADE
);

CREATE TABLE Secretaire (
    id INT AUTO_INCREMENT PRIMARY KEY,
    utilisateur_id INT,
    nom VARCHAR(100) NOT NULL,
    prenom VARCHAR(100) NOT NULL,
    telephone VARCHAR(50),
    FOREIGN KEY (utilisateur_id) REFERENCES Utilisateur(id) ON DELETE CASCADE
);

CREATE TABLE Patient (
    id INT AUTO_INCREMENT PRIMARY KEY,
    nom VARCHAR(100) NOT NULL,
    prenom VARCHAR(100) NOT NULL,
    date_de_naissance DATE,
    email VARCHAR(100) UNIQUE,
    telephone VARCHAR(50),
    adresse TEXT,
    historique_medical TEXT
);

CREATE TABLE RendezVous (
    id INT AUTO_INCREMENT PRIMARY KEY,
    medecin_id INT,
    patient_id INT,
    date_heure DATETIME NOT NULL,
    raison TEXT,
    statut ENUM('en_attente', 'confirme', 'annule') DEFAULT 'en_attente',
    commentaires TEXT,
    FOREIGN KEY (medecin_id) REFERENCES Medecin(id) ON DELETE CASCADE,
    FOREIGN KEY (patient_id) REFERENCES Patient(id) ON DELETE CASCADE
);


CREATE TABLE HoraireTravail (
    id INT AUTO_INCREMENT PRIMARY KEY,
    medecin_id INT,
    jour_de_la_semaine ENUM('lundi', 'mardi', 'mercredi', 'jeudi', 'vendredi', 'samedi', 'dimanche'),
    heure_debut TIME,
    heure_fin TIME,
    type ENUM('travail', 'conge') DEFAULT 'travail',
    commentaire TEXT,
    FOREIGN KEY (medecin_id) REFERENCES Medecin(id) ON DELETE CASCADE
);


CREATE TABLE Service (
    id INT AUTO_INCREMENT PRIMARY KEY,
    nom VARCHAR(100) NOT NULL,
    description TEXT
);

CREATE TABLE MedecinService (
    medecin_id INT,
    service_id INT,
    PRIMARY KEY (medecin_id, service_id),
    FOREIGN KEY (medecin_id) REFERENCES Medecin(id) ON DELETE CASCADE,
    FOREIGN KEY (service_id) REFERENCES Service(id) ON DELETE CASCADE
);

CREATE TABLE Note (
    id INT AUTO_INCREMENT PRIMARY KEY,
    rendezvous_id INT,
    note TEXT,
    date_creation DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (rendezvous_id) REFERENCES RendezVous(id) ON DELETE CASCADE
);

CREATE TABLE CongeMedecin (
    id INT AUTO_INCREMENT PRIMARY KEY,
    medecin_id INT,
    date_debut DATE NOT NULL,
    date_fin DATE NOT NULL,
    raison TEXT,
    FOREIGN KEY (medecin_id) REFERENCES Medecin(id) ON DELETE CASCADE
);

CREATE TABLE HistoriqueMedical (
    id INT AUTO_INCREMENT PRIMARY KEY,
    patient_id INT,
    medecin_id INT,
    date_visite DATETIME,
    diagnostic TEXT,
    traitement TEXT,
    commentaires TEXT,
    FOREIGN KEY (patient_id) REFERENCES Patient(id) ON DELETE CASCADE,
    FOREIGN KEY (medecin_id) REFERENCES Medecin(id) ON DELETE CASCADE
);

CREATE TABLE Facture (
    id INT AUTO_INCREMENT PRIMARY KEY,
    rendezvous_id INT,
    montant DECIMAL(10, 2),
    statut_paiement ENUM('paye', 'impaye') DEFAULT 'impaye',
    date_facture DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (rendezvous_id) REFERENCES RendezVous(id) ON DELETE CASCADE
);
